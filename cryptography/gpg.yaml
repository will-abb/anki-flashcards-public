"-s, --sign": "Create a signature for the specified data, confirming its origin and integrity. This is often used to verify the sender and ensure that the data has not been tampered with."
"--clear-sign": "Generate a clear text signature for the data. Unlike a standard signature, a clear text signature is human-readable and can be directly included in the body of text documents, such as emails."
"-b, --detach-sign": "Produce a detached signature, which is stored separately from the data it signs. This is useful for verifying the integrity of the data without modifying it."
"-e, --encrypt": "Encrypt data using the recipient's public key, ensuring that only the intended recipient, who has the corresponding private key, can decrypt it."
"-c, --symmetric": "Encrypt data using a symmetric cipher, where the same key is used for both encryption and decryption. This method requires securely sharing the key with the intended recipient."
"-d, --decrypt": "Decrypt data that was encrypted for the user. The command automatically determines whether the data was encrypted symmetrically or asymmetrically."
"--verify": "Verify the authenticity and integrity of a signed piece of data, checking it against the signer's public key to ensure it was truly sent by them and has not been altered."
"-k, --list-keys": "List all public keys currently available in the user's keyring, potentially used for verifying signatures or encrypting data."
"--list-signatures": "Display all keys along with their associated signatures, providing a comprehensive overview of trust relationships."
"--check-signatures": "List all keys and their signatures, and additionally verify the signatures to check their validity."
"--fingerprint": "Show the fingerprints for the listed keys, offering a secure method to verify a key's authenticity."
"-K, --list-secret-keys": "List all secret keys (private keys) held by the user, which are used for signing or decrypting data."
"--generate-key": "Initiate the generation of a new key pair (public and private keys), guiding the user through the process with options for key size and type."
"--quick-generate-key": "Quickly generate a new key pair with default settings, intended for users who need to create keys without customization."
"--quick-add-uid": "Rapidly add a new user ID to an existing key, allowing for the association of additional email addresses or names with a key."
"--quick-revoke-uid": "Swiftly revoke a user ID from a key, which is useful for disassociating an email address or name from the key."
"--quick-set-expire": "Quickly set or update the expiration date for a key, allowing users to control the lifespan of their keys for security purposes."
"--full-generate-key": "Launch a comprehensive key pair generation process, offering full customization options for the key, including type, size, and expiration date."
"--generate-revocation": "Create a revocation certificate for a key, which can be used to invalidate the key in case it is compromised or no longer needed."
"--delete-keys": "Remove specified keys from the public keyring, effectively deleting them from the user's collection of trusted keys."
"--delete-secret-keys": "Eradicate specified keys from the secret keyring, removing the user's ability to decrypt data or sign messages with those keys."
"--quick-sign-key": "Rapidly sign a key, adding a signature without the extensive verification process typically involved, used mainly for keys that the user trusts."
"--quick-lsign-key": "Quickly sign a key locally without uploading the signature to a keyserver, typically used to trust keys within a local environment."
"--quick-revoke-sig": "Rapidly revoke a key signature that you previously made, useful for invalidating endorsements in case of key compromise or other concerns."
"--sign-key": "Sign a key to certify its authenticity, often used to establish a web of trust among users by vouching for the key's owner."
"--lsign-key": "Sign a key locally, similar to '--sign-key' but the signature is not uploaded to a keyserver, indicating trust within a local or private group."
"--edit-key": "Access an interactive menu to sign or edit a key's properties, such as adding or revoking signatures and subkeys."
"--change-passphrase": "Change the passphrase for a private key, enhancing security or updating access credentials."
"--export": "Export one or more keys from your keyring, allowing you to share public keys or back up private keys."
"--send-keys": "Export keys to a keyserver, making them publicly available for others to download and use for encryption or signature verification."
"--receive-keys": "Import keys from a keyserver, adding them to your keyring to decrypt messages or verify signatures from those senders."
"--search-keys": "Search for keys on a keyserver using criteria such as email or name, useful for finding public keys of people you wish to communicate with."
"--refresh-keys": "Update all keys from a keyserver, ensuring that you have the latest keys and revocation statuses."
"--import": "Import or merge keys into your keyring, useful for adding keys received from others or merging backup keyrings."
"--card-status": "Print the smart card status, showing information like the card's serial number and the keys it contains."
"--edit-card": "Modify data on a smart card, such as changing the owner's name or other stored details."
"--change-pin": "Change the PIN for a smart card, enhancing security by updating the authentication code needed to access the card."
"--update-trustdb": "Update the trust database, reflecting any changes in key trustworthiness or revocations."
"--print-md": "Print message digests (hashes) for specified files, useful for verifying integrity or creating digital signatures."
"--server": "Run GPG in server mode, listening for encryption or decryption requests, often used in automated systems."
"--tofu-policy VALUE": "Set the Trust On First Use (TOFU) policy for a key, determining how GPG should handle keys that are encountered for the first time."
"-a, --armor": "Create ASCII armored output, which encodes binary data into a text format. This is useful for sending keys or signed messages over email or other text-based media."
"-r, --recipient USER-ID": "Encrypt data for a specified USER-ID, which can be an email address, name, or key ID associated with the recipient's public key."
"-u, --local-user USER-ID": "Use the specified USER-ID to sign or decrypt messages, allowing you to choose which of your keys to use for the operation."
"-z N": "Set compression level to N, where 0 disables compression entirely. Higher values increase compression at the cost of more processing time."
"--textmode": "Use canonical text mode for output, ensuring consistent line endings across different operating systems. This is important for clearsigning text documents."
"-o, --output FILE": "Write output to the specified file, directing the results of encryption, decryption, or other operations to a specific location on your filesystem."
"-v, --verbose": "Enable verbose mode, providing more detailed information about the operation's progress and diagnostic messages. Useful for troubleshooting."
"-n, --dry-run": "Do not make any changes; instead, simulate the command to show what would happen without actually performing encryption, decryption, or other operations."
"-i, --interactive": "Prompt before overwriting files, ensuring that you do not accidentally lose data by overwriting an existing file without confirmation."
"--openpgp": "Use strict OpenPGP behavior, adhering closely to the OpenPGP standards for compatibility with other OpenPGP compliant software."
"sec>  rsa4096/TOKIRENBL2CHPAY 2024-03-16 [SC]": "This line represents a secret key with 'sec>' indicating a private key. The 'rsa4096' specifies the encryption algorithm and key length, 'TOKIRENBL2CHPAY' is the key ID, '2024-03-16' is the creation date, and '[SC]' indicates the key's capabilities for signing '[S]' and certification '[C]'."
"LESG390FFRFADNR8PZFCH692HK8VU6DTJX5PH2B2": "This is the fingerprint of the secret key, providing a unique identifier that can be used to verify the key."
"Card serial no. = 0009 12341234": "This part provides the serial number of the smart card where the secret key is stored, offering an additional layer of physical security."
"uid                 [ultimate] First Lastname comment <email@mail.com>": "This line indicates a user ID ('uid') associated with the key, showing the trust level '[ultimate]', the user's name 'First Lastname', an optional comment 'comment', and the user's email address 'email@mail.com'."
"ssb>  rsa4096/Z2GMSOFX8X8OSUE 2024-03-16 [A]": "This represents a subkey ('ssb>') for authentication purposes, using the 'rsa4096' algorithm, with 'Z2GMSOFX8X8OSUE' as the key ID, created on '2024-03-16', and '[A]' indicating its capability for authentication."
"ssb>  rsa4096/XDSIPRM2XAT9EKA 2024-03-16 [E]": "Another subkey ('ssb>') designated for encryption, also utilizing the 'rsa4096' algorithm. 'XDSIPRM2XAT9EKA' is the key ID, with the creation date '2024-03-16', and '[E]' signifies its encryption capability."
